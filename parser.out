Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Progarm
Rule 1     Progarm -> DeclareStr
Rule 2     DeclareStr -> Declare TDeclare
Rule 3     Declare -> INT ID DeclareFun
Rule 4     Declare -> INT ID DeclareType
Rule 5     Declare -> VOID ID DeclareFun
Rule 6     TDeclare -> empty
Rule 7     TDeclare -> Declare TDeclare
Rule 8     DeclareType -> ;
Rule 9     DeclareType -> error
Rule 10    DeclareFun -> ( FormalPara ) Block
Rule 11    DeclareFun -> error FormalPara ) Block
Rule 12    DeclareFun -> ( FormalPara error Block
Rule 13    FormalPara -> ParaTable
Rule 14    FormalPara -> VOID
Rule 15    ParaTable -> Parameter TParaTable
Rule 16    TParaTable -> empty
Rule 17    TParaTable -> , Parameter TParaTable
Rule 18    Parameter -> INT ID
Rule 19    Parameter -> error ID
Rule 20    Block -> { LangStr TLangStr }
Rule 21    Block -> error LangStr TLangStr }
Rule 22    Block -> { LangStr TLangStr error
Rule 23    TLangStr -> empty
Rule 24    TLangStr -> LangStr TLangStr
Rule 25    LangStr -> InterDeclare
Rule 26    LangStr -> InterStr
Rule 27    InterDeclare -> InterVarDeclare ;
Rule 28    InterVarDeclare -> INT ID
Rule 29    InterVarDeclare -> error ID
Rule 30    InterStr -> Sentence
Rule 31    Sentence -> IfSentence
Rule 32    Sentence -> WhileSentence
Rule 33    Sentence -> ReturnSentence
Rule 34    Sentence -> AssignSentence
Rule 35    AssignSentence -> ID = Expression ;
Rule 36    AssignSentence -> ID = Expression error
Rule 37    ReturnSentence -> RETURN ;
Rule 38    ReturnSentence -> RETURN Expression ;
Rule 39    ReturnSentence -> RETURN error
Rule 40    ReturnSentence -> RETURN Expression error
Rule 41    WhileSentence -> WHILE M ( Expression ) M Block
Rule 42    M -> empty
Rule 43    IfSentence -> IF ( Expression ) M Block N M ElseSentence
Rule 44    N -> empty
Rule 45    ElseSentence -> empty
Rule 46    ElseSentence -> ELSE Block
Rule 47    Expression -> AddExpression
Rule 48    Expression -> AddExpression < AddExpression
Rule 49    Expression -> AddExpression LESS AddExpression
Rule 50    Expression -> AddExpression > AddExpression
Rule 51    Expression -> AddExpression GREATER AddExpression
Rule 52    Expression -> AddExpression EQUAL AddExpression
Rule 53    Expression -> AddExpression UNEQUAL AddExpression
Rule 54    Expression -> error < AddExpression
Rule 55    Expression -> AddExpression < error
Rule 56    Expression -> error LESS AddExpression
Rule 57    Expression -> AddExpression LESS error
Rule 58    Expression -> error > AddExpression
Rule 59    Expression -> AddExpression > error
Rule 60    Expression -> error GREATER AddExpression
Rule 61    Expression -> AddExpression GREATER error
Rule 62    Expression -> error EQUAL AddExpression
Rule 63    Expression -> AddExpression EQUAL error
Rule 64    Expression -> error UNEQUAL AddExpression
Rule 65    Expression -> AddExpression UNEQUAL error
Rule 66    Expression -> - Expression
Rule 67    AddExpression -> Term
Rule 68    AddExpression -> Term + Term
Rule 69    AddExpression -> Term - Term
Rule 70    Term -> Factor
Rule 71    Term -> Factor * Factor
Rule 72    Term -> Factor / Factor
Rule 73    Term -> error * Factor
Rule 74    Term -> Factor * error
Rule 75    Term -> error / Factor
Rule 76    Term -> Factor / error
Rule 77    Factor -> NUMBER
Rule 78    Factor -> ( Expression )
Rule 79    Factor -> ID FTYPE
Rule 80    Factor -> error Expression )
Rule 81    Factor -> ( Expression error
Rule 82    FTYPE -> Call
Rule 83    FTYPE -> empty
Rule 84    Call -> ( RealPara )
Rule 85    Call -> ( RealPara error
Rule 86    Call -> error RealPara )
Rule 87    RealPara -> RealParaTable
Rule 88    RealPara -> empty
Rule 89    RealParaTable -> Para TRealParaTable
Rule 90    TRealParaTable -> , Para TRealParaTable
Rule 91    TRealParaTable -> empty
Rule 92    TRealParaTable -> error Para TRealParaTable
Rule 93    Para -> Expression
Rule 94    empty -> <empty>

Terminals, with rules where they appear

(                    : 10 12 41 43 78 81 84 85
)                    : 10 11 41 43 78 80 84 86
*                    : 71 73 74
+                    : 68
,                    : 17 90
-                    : 66 69
/                    : 72 75 76
;                    : 8 27 35 37 38
<                    : 48 54 55
=                    : 35 36
>                    : 50 58 59
ELSE                 : 46
EQUAL                : 52 62 63
GREATER              : 51 60 61
ID                   : 3 4 5 18 19 28 29 35 36 79
IF                   : 43
INT                  : 3 4 18 28
LESS                 : 49 56 57
NUMBER               : 77
RETURN               : 37 38 39 40
UNEQUAL              : 53 64 65
VOID                 : 5 14
WHILE                : 41
error                : 9 11 12 19 21 22 29 36 39 40 54 55 56 57 58 59 60 61 62 63 64 65 73 74 75 76 80 81 85 86 92
{                    : 20 22
}                    : 20 21

Nonterminals, with rules where they appear

AddExpression        : 47 48 48 49 49 50 50 51 51 52 52 53 53 54 55 56 57 58 59 60 61 62 63 64 65
AssignSentence       : 34
Block                : 10 11 12 41 43 46
Call                 : 82
Declare              : 2 7
DeclareFun           : 3 5
DeclareStr           : 1
DeclareType          : 4
ElseSentence         : 43
Expression           : 35 36 38 40 41 43 66 78 80 81 93
FTYPE                : 79
Factor               : 70 71 71 72 72 73 74 75 76
FormalPara           : 10 11 12
IfSentence           : 31
InterDeclare         : 25
InterStr             : 26
InterVarDeclare      : 27
LangStr              : 20 21 22 24
M                    : 41 41 43 43
N                    : 43
Para                 : 89 90 92
ParaTable            : 13
Parameter            : 15 17
Progarm              : 0
RealPara             : 84 85 86
RealParaTable        : 87
ReturnSentence       : 33
Sentence             : 30
TDeclare             : 2 7
TLangStr             : 20 21 22 24
TParaTable           : 15 17
TRealParaTable       : 89 90 92
Term                 : 67 68 68 69 69
WhileSentence        : 32
empty                : 6 16 23 42 44 45 83 88 91

Parsing method: LALR

state 0

    (0) S' -> . Progarm
    (1) Progarm -> . DeclareStr
    (2) DeclareStr -> . Declare TDeclare
    (3) Declare -> . INT ID DeclareFun
    (4) Declare -> . INT ID DeclareType
    (5) Declare -> . VOID ID DeclareFun

    INT             shift and go to state 4
    VOID            shift and go to state 5

    Progarm                        shift and go to state 1
    DeclareStr                     shift and go to state 2
    Declare                        shift and go to state 3

state 1

    (0) S' -> Progarm .



state 2

    (1) Progarm -> DeclareStr .

    $end            reduce using rule 1 (Progarm -> DeclareStr .)


state 3

    (2) DeclareStr -> Declare . TDeclare
    (6) TDeclare -> . empty
    (7) TDeclare -> . Declare TDeclare
    (94) empty -> .
    (3) Declare -> . INT ID DeclareFun
    (4) Declare -> . INT ID DeclareType
    (5) Declare -> . VOID ID DeclareFun

    $end            reduce using rule 94 (empty -> .)
    INT             shift and go to state 4
    VOID            shift and go to state 5

    Declare                        shift and go to state 6
    TDeclare                       shift and go to state 7
    empty                          shift and go to state 8

state 4

    (3) Declare -> INT . ID DeclareFun
    (4) Declare -> INT . ID DeclareType

    ID              shift and go to state 9


state 5

    (5) Declare -> VOID . ID DeclareFun

    ID              shift and go to state 10


state 6

    (7) TDeclare -> Declare . TDeclare
    (6) TDeclare -> . empty
    (7) TDeclare -> . Declare TDeclare
    (94) empty -> .
    (3) Declare -> . INT ID DeclareFun
    (4) Declare -> . INT ID DeclareType
    (5) Declare -> . VOID ID DeclareFun

    $end            reduce using rule 94 (empty -> .)
    INT             shift and go to state 4
    VOID            shift and go to state 5

    Declare                        shift and go to state 6
    TDeclare                       shift and go to state 11
    empty                          shift and go to state 8

state 7

    (2) DeclareStr -> Declare TDeclare .

    $end            reduce using rule 2 (DeclareStr -> Declare TDeclare .)


state 8

    (6) TDeclare -> empty .

    $end            reduce using rule 6 (TDeclare -> empty .)


state 9

    (3) Declare -> INT ID . DeclareFun
    (4) Declare -> INT ID . DeclareType
    (10) DeclareFun -> . ( FormalPara ) Block
    (11) DeclareFun -> . error FormalPara ) Block
    (12) DeclareFun -> . ( FormalPara error Block
    (8) DeclareType -> . ;
    (9) DeclareType -> . error

    (               shift and go to state 14
    error           shift and go to state 15
    ;               shift and go to state 16

    DeclareFun                     shift and go to state 12
    DeclareType                    shift and go to state 13

state 10

    (5) Declare -> VOID ID . DeclareFun
    (10) DeclareFun -> . ( FormalPara ) Block
    (11) DeclareFun -> . error FormalPara ) Block
    (12) DeclareFun -> . ( FormalPara error Block

    (               shift and go to state 14
    error           shift and go to state 18

    DeclareFun                     shift and go to state 17

state 11

    (7) TDeclare -> Declare TDeclare .

    $end            reduce using rule 7 (TDeclare -> Declare TDeclare .)


state 12

    (3) Declare -> INT ID DeclareFun .

    INT             reduce using rule 3 (Declare -> INT ID DeclareFun .)
    VOID            reduce using rule 3 (Declare -> INT ID DeclareFun .)
    $end            reduce using rule 3 (Declare -> INT ID DeclareFun .)


state 13

    (4) Declare -> INT ID DeclareType .

    INT             reduce using rule 4 (Declare -> INT ID DeclareType .)
    VOID            reduce using rule 4 (Declare -> INT ID DeclareType .)
    $end            reduce using rule 4 (Declare -> INT ID DeclareType .)


state 14

    (10) DeclareFun -> ( . FormalPara ) Block
    (12) DeclareFun -> ( . FormalPara error Block
    (13) FormalPara -> . ParaTable
    (14) FormalPara -> . VOID
    (15) ParaTable -> . Parameter TParaTable
    (18) Parameter -> . INT ID
    (19) Parameter -> . error ID

    VOID            shift and go to state 22
    INT             shift and go to state 24
    error           shift and go to state 20

    FormalPara                     shift and go to state 19
    ParaTable                      shift and go to state 21
    Parameter                      shift and go to state 23

state 15

    (11) DeclareFun -> error . FormalPara ) Block
    (9) DeclareType -> error .
    (13) FormalPara -> . ParaTable
    (14) FormalPara -> . VOID
    (15) ParaTable -> . Parameter TParaTable
    (18) Parameter -> . INT ID
    (19) Parameter -> . error ID

  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for INT resolved as shift
    $end            reduce using rule 9 (DeclareType -> error .)
    VOID            shift and go to state 22
    INT             shift and go to state 24
    error           shift and go to state 20

  ! INT             [ reduce using rule 9 (DeclareType -> error .) ]
  ! VOID            [ reduce using rule 9 (DeclareType -> error .) ]

    FormalPara                     shift and go to state 25
    ParaTable                      shift and go to state 21
    Parameter                      shift and go to state 23

state 16

    (8) DeclareType -> ; .

    INT             reduce using rule 8 (DeclareType -> ; .)
    VOID            reduce using rule 8 (DeclareType -> ; .)
    $end            reduce using rule 8 (DeclareType -> ; .)


state 17

    (5) Declare -> VOID ID DeclareFun .

    INT             reduce using rule 5 (Declare -> VOID ID DeclareFun .)
    VOID            reduce using rule 5 (Declare -> VOID ID DeclareFun .)
    $end            reduce using rule 5 (Declare -> VOID ID DeclareFun .)


state 18

    (11) DeclareFun -> error . FormalPara ) Block
    (13) FormalPara -> . ParaTable
    (14) FormalPara -> . VOID
    (15) ParaTable -> . Parameter TParaTable
    (18) Parameter -> . INT ID
    (19) Parameter -> . error ID

    VOID            shift and go to state 22
    INT             shift and go to state 24
    error           shift and go to state 20

    FormalPara                     shift and go to state 25
    ParaTable                      shift and go to state 21
    Parameter                      shift and go to state 23

state 19

    (10) DeclareFun -> ( FormalPara . ) Block
    (12) DeclareFun -> ( FormalPara . error Block

    )               shift and go to state 26
    error           shift and go to state 27


state 20

    (19) Parameter -> error . ID

    ID              shift and go to state 28


state 21

    (13) FormalPara -> ParaTable .

    )               reduce using rule 13 (FormalPara -> ParaTable .)
    error           reduce using rule 13 (FormalPara -> ParaTable .)


state 22

    (14) FormalPara -> VOID .

    )               reduce using rule 14 (FormalPara -> VOID .)
    error           reduce using rule 14 (FormalPara -> VOID .)


state 23

    (15) ParaTable -> Parameter . TParaTable
    (16) TParaTable -> . empty
    (17) TParaTable -> . , Parameter TParaTable
    (94) empty -> .

    ,               shift and go to state 31
    )               reduce using rule 94 (empty -> .)
    error           reduce using rule 94 (empty -> .)

    TParaTable                     shift and go to state 29
    empty                          shift and go to state 30

state 24

    (18) Parameter -> INT . ID

    ID              shift and go to state 32


state 25

    (11) DeclareFun -> error FormalPara . ) Block

    )               shift and go to state 33


state 26

    (10) DeclareFun -> ( FormalPara ) . Block
    (20) Block -> . { LangStr TLangStr }
    (21) Block -> . error LangStr TLangStr }
    (22) Block -> . { LangStr TLangStr error

    {               shift and go to state 35
    error           shift and go to state 36

    Block                          shift and go to state 34

state 27

    (12) DeclareFun -> ( FormalPara error . Block
    (20) Block -> . { LangStr TLangStr }
    (21) Block -> . error LangStr TLangStr }
    (22) Block -> . { LangStr TLangStr error

    {               shift and go to state 35
    error           shift and go to state 36

    Block                          shift and go to state 37

state 28

    (19) Parameter -> error ID .

    ,               reduce using rule 19 (Parameter -> error ID .)
    )               reduce using rule 19 (Parameter -> error ID .)
    error           reduce using rule 19 (Parameter -> error ID .)


state 29

    (15) ParaTable -> Parameter TParaTable .

    )               reduce using rule 15 (ParaTable -> Parameter TParaTable .)
    error           reduce using rule 15 (ParaTable -> Parameter TParaTable .)


state 30

    (16) TParaTable -> empty .

    )               reduce using rule 16 (TParaTable -> empty .)
    error           reduce using rule 16 (TParaTable -> empty .)


state 31

    (17) TParaTable -> , . Parameter TParaTable
    (18) Parameter -> . INT ID
    (19) Parameter -> . error ID

    INT             shift and go to state 24
    error           shift and go to state 20

    Parameter                      shift and go to state 38

state 32

    (18) Parameter -> INT ID .

    ,               reduce using rule 18 (Parameter -> INT ID .)
    )               reduce using rule 18 (Parameter -> INT ID .)
    error           reduce using rule 18 (Parameter -> INT ID .)


state 33

    (11) DeclareFun -> error FormalPara ) . Block
    (20) Block -> . { LangStr TLangStr }
    (21) Block -> . error LangStr TLangStr }
    (22) Block -> . { LangStr TLangStr error

    {               shift and go to state 35
    error           shift and go to state 36

    Block                          shift and go to state 39

state 34

    (10) DeclareFun -> ( FormalPara ) Block .

    INT             reduce using rule 10 (DeclareFun -> ( FormalPara ) Block .)
    VOID            reduce using rule 10 (DeclareFun -> ( FormalPara ) Block .)
    $end            reduce using rule 10 (DeclareFun -> ( FormalPara ) Block .)


state 35

    (20) Block -> { . LangStr TLangStr }
    (22) Block -> { . LangStr TLangStr error
    (25) LangStr -> . InterDeclare
    (26) LangStr -> . InterStr
    (27) InterDeclare -> . InterVarDeclare ;
    (30) InterStr -> . Sentence
    (28) InterVarDeclare -> . INT ID
    (29) InterVarDeclare -> . error ID
    (31) Sentence -> . IfSentence
    (32) Sentence -> . WhileSentence
    (33) Sentence -> . ReturnSentence
    (34) Sentence -> . AssignSentence
    (43) IfSentence -> . IF ( Expression ) M Block N M ElseSentence
    (41) WhileSentence -> . WHILE M ( Expression ) M Block
    (37) ReturnSentence -> . RETURN ;
    (38) ReturnSentence -> . RETURN Expression ;
    (39) ReturnSentence -> . RETURN error
    (40) ReturnSentence -> . RETURN Expression error
    (35) AssignSentence -> . ID = Expression ;
    (36) AssignSentence -> . ID = Expression error

    INT             shift and go to state 46
    error           shift and go to state 41
    IF              shift and go to state 52
    WHILE           shift and go to state 53
    RETURN          shift and go to state 54
    ID              shift and go to state 47

    LangStr                        shift and go to state 40
    InterDeclare                   shift and go to state 42
    InterStr                       shift and go to state 43
    InterVarDeclare                shift and go to state 44
    Sentence                       shift and go to state 45
    IfSentence                     shift and go to state 48
    WhileSentence                  shift and go to state 49
    ReturnSentence                 shift and go to state 50
    AssignSentence                 shift and go to state 51

state 36

    (21) Block -> error . LangStr TLangStr }
    (25) LangStr -> . InterDeclare
    (26) LangStr -> . InterStr
    (27) InterDeclare -> . InterVarDeclare ;
    (30) InterStr -> . Sentence
    (28) InterVarDeclare -> . INT ID
    (29) InterVarDeclare -> . error ID
    (31) Sentence -> . IfSentence
    (32) Sentence -> . WhileSentence
    (33) Sentence -> . ReturnSentence
    (34) Sentence -> . AssignSentence
    (43) IfSentence -> . IF ( Expression ) M Block N M ElseSentence
    (41) WhileSentence -> . WHILE M ( Expression ) M Block
    (37) ReturnSentence -> . RETURN ;
    (38) ReturnSentence -> . RETURN Expression ;
    (39) ReturnSentence -> . RETURN error
    (40) ReturnSentence -> . RETURN Expression error
    (35) AssignSentence -> . ID = Expression ;
    (36) AssignSentence -> . ID = Expression error

    INT             shift and go to state 46
    error           shift and go to state 41
    IF              shift and go to state 52
    WHILE           shift and go to state 53
    RETURN          shift and go to state 54
    ID              shift and go to state 47

    LangStr                        shift and go to state 55
    InterDeclare                   shift and go to state 42
    InterStr                       shift and go to state 43
    InterVarDeclare                shift and go to state 44
    Sentence                       shift and go to state 45
    IfSentence                     shift and go to state 48
    WhileSentence                  shift and go to state 49
    ReturnSentence                 shift and go to state 50
    AssignSentence                 shift and go to state 51

state 37

    (12) DeclareFun -> ( FormalPara error Block .

    INT             reduce using rule 12 (DeclareFun -> ( FormalPara error Block .)
    VOID            reduce using rule 12 (DeclareFun -> ( FormalPara error Block .)
    $end            reduce using rule 12 (DeclareFun -> ( FormalPara error Block .)


state 38

    (17) TParaTable -> , Parameter . TParaTable
    (16) TParaTable -> . empty
    (17) TParaTable -> . , Parameter TParaTable
    (94) empty -> .

    ,               shift and go to state 31
    )               reduce using rule 94 (empty -> .)
    error           reduce using rule 94 (empty -> .)

    TParaTable                     shift and go to state 56
    empty                          shift and go to state 30

state 39

    (11) DeclareFun -> error FormalPara ) Block .

    INT             reduce using rule 11 (DeclareFun -> error FormalPara ) Block .)
    VOID            reduce using rule 11 (DeclareFun -> error FormalPara ) Block .)
    $end            reduce using rule 11 (DeclareFun -> error FormalPara ) Block .)


state 40

    (20) Block -> { LangStr . TLangStr }
    (22) Block -> { LangStr . TLangStr error
    (23) TLangStr -> . empty
    (24) TLangStr -> . LangStr TLangStr
    (94) empty -> .
    (25) LangStr -> . InterDeclare
    (26) LangStr -> . InterStr
    (27) InterDeclare -> . InterVarDeclare ;
    (30) InterStr -> . Sentence
    (28) InterVarDeclare -> . INT ID
    (29) InterVarDeclare -> . error ID
    (31) Sentence -> . IfSentence
    (32) Sentence -> . WhileSentence
    (33) Sentence -> . ReturnSentence
    (34) Sentence -> . AssignSentence
    (43) IfSentence -> . IF ( Expression ) M Block N M ElseSentence
    (41) WhileSentence -> . WHILE M ( Expression ) M Block
    (37) ReturnSentence -> . RETURN ;
    (38) ReturnSentence -> . RETURN Expression ;
    (39) ReturnSentence -> . RETURN error
    (40) ReturnSentence -> . RETURN Expression error
    (35) AssignSentence -> . ID = Expression ;
    (36) AssignSentence -> . ID = Expression error

  ! shift/reduce conflict for error resolved as shift
    }               reduce using rule 94 (empty -> .)
    INT             shift and go to state 46
    error           shift and go to state 41
    IF              shift and go to state 52
    WHILE           shift and go to state 53
    RETURN          shift and go to state 54
    ID              shift and go to state 47

  ! error           [ reduce using rule 94 (empty -> .) ]

    LangStr                        shift and go to state 57
    TLangStr                       shift and go to state 58
    empty                          shift and go to state 59
    InterDeclare                   shift and go to state 42
    InterStr                       shift and go to state 43
    InterVarDeclare                shift and go to state 44
    Sentence                       shift and go to state 45
    IfSentence                     shift and go to state 48
    WhileSentence                  shift and go to state 49
    ReturnSentence                 shift and go to state 50
    AssignSentence                 shift and go to state 51

state 41

    (29) InterVarDeclare -> error . ID

    ID              shift and go to state 60


state 42

    (25) LangStr -> InterDeclare .

    INT             reduce using rule 25 (LangStr -> InterDeclare .)
    error           reduce using rule 25 (LangStr -> InterDeclare .)
    IF              reduce using rule 25 (LangStr -> InterDeclare .)
    WHILE           reduce using rule 25 (LangStr -> InterDeclare .)
    RETURN          reduce using rule 25 (LangStr -> InterDeclare .)
    ID              reduce using rule 25 (LangStr -> InterDeclare .)
    }               reduce using rule 25 (LangStr -> InterDeclare .)


state 43

    (26) LangStr -> InterStr .

    INT             reduce using rule 26 (LangStr -> InterStr .)
    error           reduce using rule 26 (LangStr -> InterStr .)
    IF              reduce using rule 26 (LangStr -> InterStr .)
    WHILE           reduce using rule 26 (LangStr -> InterStr .)
    RETURN          reduce using rule 26 (LangStr -> InterStr .)
    ID              reduce using rule 26 (LangStr -> InterStr .)
    }               reduce using rule 26 (LangStr -> InterStr .)


state 44

    (27) InterDeclare -> InterVarDeclare . ;

    ;               shift and go to state 61


state 45

    (30) InterStr -> Sentence .

    INT             reduce using rule 30 (InterStr -> Sentence .)
    error           reduce using rule 30 (InterStr -> Sentence .)
    IF              reduce using rule 30 (InterStr -> Sentence .)
    WHILE           reduce using rule 30 (InterStr -> Sentence .)
    RETURN          reduce using rule 30 (InterStr -> Sentence .)
    ID              reduce using rule 30 (InterStr -> Sentence .)
    }               reduce using rule 30 (InterStr -> Sentence .)


state 46

    (28) InterVarDeclare -> INT . ID

    ID              shift and go to state 62


state 47

    (35) AssignSentence -> ID . = Expression ;
    (36) AssignSentence -> ID . = Expression error

    =               shift and go to state 63


state 48

    (31) Sentence -> IfSentence .

    INT             reduce using rule 31 (Sentence -> IfSentence .)
    error           reduce using rule 31 (Sentence -> IfSentence .)
    IF              reduce using rule 31 (Sentence -> IfSentence .)
    WHILE           reduce using rule 31 (Sentence -> IfSentence .)
    RETURN          reduce using rule 31 (Sentence -> IfSentence .)
    ID              reduce using rule 31 (Sentence -> IfSentence .)
    }               reduce using rule 31 (Sentence -> IfSentence .)


state 49

    (32) Sentence -> WhileSentence .

    INT             reduce using rule 32 (Sentence -> WhileSentence .)
    error           reduce using rule 32 (Sentence -> WhileSentence .)
    IF              reduce using rule 32 (Sentence -> WhileSentence .)
    WHILE           reduce using rule 32 (Sentence -> WhileSentence .)
    RETURN          reduce using rule 32 (Sentence -> WhileSentence .)
    ID              reduce using rule 32 (Sentence -> WhileSentence .)
    }               reduce using rule 32 (Sentence -> WhileSentence .)


state 50

    (33) Sentence -> ReturnSentence .

    INT             reduce using rule 33 (Sentence -> ReturnSentence .)
    error           reduce using rule 33 (Sentence -> ReturnSentence .)
    IF              reduce using rule 33 (Sentence -> ReturnSentence .)
    WHILE           reduce using rule 33 (Sentence -> ReturnSentence .)
    RETURN          reduce using rule 33 (Sentence -> ReturnSentence .)
    ID              reduce using rule 33 (Sentence -> ReturnSentence .)
    }               reduce using rule 33 (Sentence -> ReturnSentence .)


state 51

    (34) Sentence -> AssignSentence .

    INT             reduce using rule 34 (Sentence -> AssignSentence .)
    error           reduce using rule 34 (Sentence -> AssignSentence .)
    IF              reduce using rule 34 (Sentence -> AssignSentence .)
    WHILE           reduce using rule 34 (Sentence -> AssignSentence .)
    RETURN          reduce using rule 34 (Sentence -> AssignSentence .)
    ID              reduce using rule 34 (Sentence -> AssignSentence .)
    }               reduce using rule 34 (Sentence -> AssignSentence .)


state 52

    (43) IfSentence -> IF . ( Expression ) M Block N M ElseSentence

    (               shift and go to state 64


state 53

    (41) WhileSentence -> WHILE . M ( Expression ) M Block
    (42) M -> . empty
    (94) empty -> .

    (               reduce using rule 94 (empty -> .)

    M                              shift and go to state 65
    empty                          shift and go to state 66

state 54

    (37) ReturnSentence -> RETURN . ;
    (38) ReturnSentence -> RETURN . Expression ;
    (39) ReturnSentence -> RETURN . error
    (40) ReturnSentence -> RETURN . Expression error
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    ;               shift and go to state 67
    error           shift and go to state 69
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Expression                     shift and go to state 68
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 55

    (21) Block -> error LangStr . TLangStr }
    (23) TLangStr -> . empty
    (24) TLangStr -> . LangStr TLangStr
    (94) empty -> .
    (25) LangStr -> . InterDeclare
    (26) LangStr -> . InterStr
    (27) InterDeclare -> . InterVarDeclare ;
    (30) InterStr -> . Sentence
    (28) InterVarDeclare -> . INT ID
    (29) InterVarDeclare -> . error ID
    (31) Sentence -> . IfSentence
    (32) Sentence -> . WhileSentence
    (33) Sentence -> . ReturnSentence
    (34) Sentence -> . AssignSentence
    (43) IfSentence -> . IF ( Expression ) M Block N M ElseSentence
    (41) WhileSentence -> . WHILE M ( Expression ) M Block
    (37) ReturnSentence -> . RETURN ;
    (38) ReturnSentence -> . RETURN Expression ;
    (39) ReturnSentence -> . RETURN error
    (40) ReturnSentence -> . RETURN Expression error
    (35) AssignSentence -> . ID = Expression ;
    (36) AssignSentence -> . ID = Expression error

    }               reduce using rule 94 (empty -> .)
    INT             shift and go to state 46
    error           shift and go to state 41
    IF              shift and go to state 52
    WHILE           shift and go to state 53
    RETURN          shift and go to state 54
    ID              shift and go to state 47

    LangStr                        shift and go to state 57
    TLangStr                       shift and go to state 77
    empty                          shift and go to state 59
    InterDeclare                   shift and go to state 42
    InterStr                       shift and go to state 43
    InterVarDeclare                shift and go to state 44
    Sentence                       shift and go to state 45
    IfSentence                     shift and go to state 48
    WhileSentence                  shift and go to state 49
    ReturnSentence                 shift and go to state 50
    AssignSentence                 shift and go to state 51

state 56

    (17) TParaTable -> , Parameter TParaTable .

    )               reduce using rule 17 (TParaTable -> , Parameter TParaTable .)
    error           reduce using rule 17 (TParaTable -> , Parameter TParaTable .)


state 57

    (24) TLangStr -> LangStr . TLangStr
    (23) TLangStr -> . empty
    (24) TLangStr -> . LangStr TLangStr
    (94) empty -> .
    (25) LangStr -> . InterDeclare
    (26) LangStr -> . InterStr
    (27) InterDeclare -> . InterVarDeclare ;
    (30) InterStr -> . Sentence
    (28) InterVarDeclare -> . INT ID
    (29) InterVarDeclare -> . error ID
    (31) Sentence -> . IfSentence
    (32) Sentence -> . WhileSentence
    (33) Sentence -> . ReturnSentence
    (34) Sentence -> . AssignSentence
    (43) IfSentence -> . IF ( Expression ) M Block N M ElseSentence
    (41) WhileSentence -> . WHILE M ( Expression ) M Block
    (37) ReturnSentence -> . RETURN ;
    (38) ReturnSentence -> . RETURN Expression ;
    (39) ReturnSentence -> . RETURN error
    (40) ReturnSentence -> . RETURN Expression error
    (35) AssignSentence -> . ID = Expression ;
    (36) AssignSentence -> . ID = Expression error

  ! shift/reduce conflict for error resolved as shift
    }               reduce using rule 94 (empty -> .)
    INT             shift and go to state 46
    error           shift and go to state 41
    IF              shift and go to state 52
    WHILE           shift and go to state 53
    RETURN          shift and go to state 54
    ID              shift and go to state 47

  ! error           [ reduce using rule 94 (empty -> .) ]

    LangStr                        shift and go to state 57
    TLangStr                       shift and go to state 78
    empty                          shift and go to state 59
    InterDeclare                   shift and go to state 42
    InterStr                       shift and go to state 43
    InterVarDeclare                shift and go to state 44
    Sentence                       shift and go to state 45
    IfSentence                     shift and go to state 48
    WhileSentence                  shift and go to state 49
    ReturnSentence                 shift and go to state 50
    AssignSentence                 shift and go to state 51

state 58

    (20) Block -> { LangStr TLangStr . }
    (22) Block -> { LangStr TLangStr . error

    }               shift and go to state 79
    error           shift and go to state 80


state 59

    (23) TLangStr -> empty .

    }               reduce using rule 23 (TLangStr -> empty .)
    error           reduce using rule 23 (TLangStr -> empty .)


state 60

    (29) InterVarDeclare -> error ID .

    ;               reduce using rule 29 (InterVarDeclare -> error ID .)


state 61

    (27) InterDeclare -> InterVarDeclare ; .

    INT             reduce using rule 27 (InterDeclare -> InterVarDeclare ; .)
    error           reduce using rule 27 (InterDeclare -> InterVarDeclare ; .)
    IF              reduce using rule 27 (InterDeclare -> InterVarDeclare ; .)
    WHILE           reduce using rule 27 (InterDeclare -> InterVarDeclare ; .)
    RETURN          reduce using rule 27 (InterDeclare -> InterVarDeclare ; .)
    ID              reduce using rule 27 (InterDeclare -> InterVarDeclare ; .)
    }               reduce using rule 27 (InterDeclare -> InterVarDeclare ; .)


state 62

    (28) InterVarDeclare -> INT ID .

    ;               reduce using rule 28 (InterVarDeclare -> INT ID .)


state 63

    (35) AssignSentence -> ID = . Expression ;
    (36) AssignSentence -> ID = . Expression error
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Expression                     shift and go to state 81
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 64

    (43) IfSentence -> IF ( . Expression ) M Block N M ElseSentence
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Expression                     shift and go to state 83
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 65

    (41) WhileSentence -> WHILE M . ( Expression ) M Block

    (               shift and go to state 84


state 66

    (42) M -> empty .

    (               reduce using rule 42 (M -> empty .)
    {               reduce using rule 42 (M -> empty .)
    error           reduce using rule 42 (M -> empty .)
    ELSE            reduce using rule 42 (M -> empty .)
    INT             reduce using rule 42 (M -> empty .)
    IF              reduce using rule 42 (M -> empty .)
    WHILE           reduce using rule 42 (M -> empty .)
    RETURN          reduce using rule 42 (M -> empty .)
    ID              reduce using rule 42 (M -> empty .)
    }               reduce using rule 42 (M -> empty .)


state 67

    (37) ReturnSentence -> RETURN ; .

    INT             reduce using rule 37 (ReturnSentence -> RETURN ; .)
    error           reduce using rule 37 (ReturnSentence -> RETURN ; .)
    IF              reduce using rule 37 (ReturnSentence -> RETURN ; .)
    WHILE           reduce using rule 37 (ReturnSentence -> RETURN ; .)
    RETURN          reduce using rule 37 (ReturnSentence -> RETURN ; .)
    ID              reduce using rule 37 (ReturnSentence -> RETURN ; .)
    }               reduce using rule 37 (ReturnSentence -> RETURN ; .)


state 68

    (38) ReturnSentence -> RETURN Expression . ;
    (40) ReturnSentence -> RETURN Expression . error

    ;               shift and go to state 85
    error           shift and go to state 86


state 69

    (39) ReturnSentence -> RETURN error .
    (54) Expression -> error . < AddExpression
    (56) Expression -> error . LESS AddExpression
    (58) Expression -> error . > AddExpression
    (60) Expression -> error . GREATER AddExpression
    (62) Expression -> error . EQUAL AddExpression
    (64) Expression -> error . UNEQUAL AddExpression
    (73) Term -> error . * Factor
    (75) Term -> error . / Factor
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    INT             reduce using rule 39 (ReturnSentence -> RETURN error .)
    IF              reduce using rule 39 (ReturnSentence -> RETURN error .)
    WHILE           reduce using rule 39 (ReturnSentence -> RETURN error .)
    RETURN          reduce using rule 39 (ReturnSentence -> RETURN error .)
    }               reduce using rule 39 (ReturnSentence -> RETURN error .)
    <               shift and go to state 87
    LESS            shift and go to state 88
    >               shift and go to state 89
    GREATER         shift and go to state 90
    EQUAL           shift and go to state 91
    UNEQUAL         shift and go to state 92
    *               shift and go to state 93
    /               shift and go to state 94
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! error           [ reduce using rule 39 (ReturnSentence -> RETURN error .) ]
  ! ID              [ reduce using rule 39 (ReturnSentence -> RETURN error .) ]

    AddExpression                  shift and go to state 70
    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    Term                           shift and go to state 72

state 70

    (47) Expression -> AddExpression .
    (48) Expression -> AddExpression . < AddExpression
    (49) Expression -> AddExpression . LESS AddExpression
    (50) Expression -> AddExpression . > AddExpression
    (51) Expression -> AddExpression . GREATER AddExpression
    (52) Expression -> AddExpression . EQUAL AddExpression
    (53) Expression -> AddExpression . UNEQUAL AddExpression
    (55) Expression -> AddExpression . < error
    (57) Expression -> AddExpression . LESS error
    (59) Expression -> AddExpression . > error
    (61) Expression -> AddExpression . GREATER error
    (63) Expression -> AddExpression . EQUAL error
    (65) Expression -> AddExpression . UNEQUAL error

    ;               reduce using rule 47 (Expression -> AddExpression .)
    error           reduce using rule 47 (Expression -> AddExpression .)
    )               reduce using rule 47 (Expression -> AddExpression .)
    ,               reduce using rule 47 (Expression -> AddExpression .)
    <               shift and go to state 96
    LESS            shift and go to state 97
    >               shift and go to state 98
    GREATER         shift and go to state 99
    EQUAL           shift and go to state 100
    UNEQUAL         shift and go to state 101


state 71

    (66) Expression -> - . Expression
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Expression                     shift and go to state 102
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 72

    (67) AddExpression -> Term .
    (68) AddExpression -> Term . + Term
    (69) AddExpression -> Term . - Term

    <               reduce using rule 67 (AddExpression -> Term .)
    LESS            reduce using rule 67 (AddExpression -> Term .)
    >               reduce using rule 67 (AddExpression -> Term .)
    GREATER         reduce using rule 67 (AddExpression -> Term .)
    EQUAL           reduce using rule 67 (AddExpression -> Term .)
    UNEQUAL         reduce using rule 67 (AddExpression -> Term .)
    ;               reduce using rule 67 (AddExpression -> Term .)
    error           reduce using rule 67 (AddExpression -> Term .)
    )               reduce using rule 67 (AddExpression -> Term .)
    ,               reduce using rule 67 (AddExpression -> Term .)
    +               shift and go to state 103
    -               shift and go to state 104


state 73

    (70) Term -> Factor .
    (71) Term -> Factor . * Factor
    (72) Term -> Factor . / Factor
    (74) Term -> Factor . * error
    (76) Term -> Factor . / error

    +               reduce using rule 70 (Term -> Factor .)
    -               reduce using rule 70 (Term -> Factor .)
    <               reduce using rule 70 (Term -> Factor .)
    LESS            reduce using rule 70 (Term -> Factor .)
    >               reduce using rule 70 (Term -> Factor .)
    GREATER         reduce using rule 70 (Term -> Factor .)
    EQUAL           reduce using rule 70 (Term -> Factor .)
    UNEQUAL         reduce using rule 70 (Term -> Factor .)
    ;               reduce using rule 70 (Term -> Factor .)
    error           reduce using rule 70 (Term -> Factor .)
    )               reduce using rule 70 (Term -> Factor .)
    ,               reduce using rule 70 (Term -> Factor .)
    *               shift and go to state 105
    /               shift and go to state 106


state 74

    (77) Factor -> NUMBER .

    *               reduce using rule 77 (Factor -> NUMBER .)
    /               reduce using rule 77 (Factor -> NUMBER .)
    +               reduce using rule 77 (Factor -> NUMBER .)
    -               reduce using rule 77 (Factor -> NUMBER .)
    <               reduce using rule 77 (Factor -> NUMBER .)
    LESS            reduce using rule 77 (Factor -> NUMBER .)
    >               reduce using rule 77 (Factor -> NUMBER .)
    GREATER         reduce using rule 77 (Factor -> NUMBER .)
    EQUAL           reduce using rule 77 (Factor -> NUMBER .)
    UNEQUAL         reduce using rule 77 (Factor -> NUMBER .)
    ;               reduce using rule 77 (Factor -> NUMBER .)
    error           reduce using rule 77 (Factor -> NUMBER .)
    )               reduce using rule 77 (Factor -> NUMBER .)
    ,               reduce using rule 77 (Factor -> NUMBER .)


state 75

    (78) Factor -> ( . Expression )
    (81) Factor -> ( . Expression error
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Expression                     shift and go to state 107
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 76

    (79) Factor -> ID . FTYPE
    (82) FTYPE -> . Call
    (83) FTYPE -> . empty
    (84) Call -> . ( RealPara )
    (85) Call -> . ( RealPara error
    (86) Call -> . error RealPara )
    (94) empty -> .

  ! shift/reduce conflict for error resolved as shift
    (               shift and go to state 111
    error           shift and go to state 112
    *               reduce using rule 94 (empty -> .)
    /               reduce using rule 94 (empty -> .)
    +               reduce using rule 94 (empty -> .)
    -               reduce using rule 94 (empty -> .)
    <               reduce using rule 94 (empty -> .)
    LESS            reduce using rule 94 (empty -> .)
    >               reduce using rule 94 (empty -> .)
    GREATER         reduce using rule 94 (empty -> .)
    EQUAL           reduce using rule 94 (empty -> .)
    UNEQUAL         reduce using rule 94 (empty -> .)
    ;               reduce using rule 94 (empty -> .)
    )               reduce using rule 94 (empty -> .)
    ,               reduce using rule 94 (empty -> .)

  ! error           [ reduce using rule 94 (empty -> .) ]

    FTYPE                          shift and go to state 108
    Call                           shift and go to state 109
    empty                          shift and go to state 110

state 77

    (21) Block -> error LangStr TLangStr . }

    }               shift and go to state 113


state 78

    (24) TLangStr -> LangStr TLangStr .

    }               reduce using rule 24 (TLangStr -> LangStr TLangStr .)
    error           reduce using rule 24 (TLangStr -> LangStr TLangStr .)


state 79

    (20) Block -> { LangStr TLangStr } .

    INT             reduce using rule 20 (Block -> { LangStr TLangStr } .)
    VOID            reduce using rule 20 (Block -> { LangStr TLangStr } .)
    $end            reduce using rule 20 (Block -> { LangStr TLangStr } .)
    ELSE            reduce using rule 20 (Block -> { LangStr TLangStr } .)
    error           reduce using rule 20 (Block -> { LangStr TLangStr } .)
    IF              reduce using rule 20 (Block -> { LangStr TLangStr } .)
    WHILE           reduce using rule 20 (Block -> { LangStr TLangStr } .)
    RETURN          reduce using rule 20 (Block -> { LangStr TLangStr } .)
    ID              reduce using rule 20 (Block -> { LangStr TLangStr } .)
    }               reduce using rule 20 (Block -> { LangStr TLangStr } .)


state 80

    (22) Block -> { LangStr TLangStr error .

    INT             reduce using rule 22 (Block -> { LangStr TLangStr error .)
    VOID            reduce using rule 22 (Block -> { LangStr TLangStr error .)
    $end            reduce using rule 22 (Block -> { LangStr TLangStr error .)
    ELSE            reduce using rule 22 (Block -> { LangStr TLangStr error .)
    error           reduce using rule 22 (Block -> { LangStr TLangStr error .)
    IF              reduce using rule 22 (Block -> { LangStr TLangStr error .)
    WHILE           reduce using rule 22 (Block -> { LangStr TLangStr error .)
    RETURN          reduce using rule 22 (Block -> { LangStr TLangStr error .)
    ID              reduce using rule 22 (Block -> { LangStr TLangStr error .)
    }               reduce using rule 22 (Block -> { LangStr TLangStr error .)


state 81

    (35) AssignSentence -> ID = Expression . ;
    (36) AssignSentence -> ID = Expression . error

    ;               shift and go to state 114
    error           shift and go to state 115


state 82

    (54) Expression -> error . < AddExpression
    (56) Expression -> error . LESS AddExpression
    (58) Expression -> error . > AddExpression
    (60) Expression -> error . GREATER AddExpression
    (62) Expression -> error . EQUAL AddExpression
    (64) Expression -> error . UNEQUAL AddExpression
    (73) Term -> error . * Factor
    (75) Term -> error . / Factor
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    <               shift and go to state 87
    LESS            shift and go to state 88
    >               shift and go to state 89
    GREATER         shift and go to state 90
    EQUAL           shift and go to state 91
    UNEQUAL         shift and go to state 92
    *               shift and go to state 93
    /               shift and go to state 94
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 70
    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    Term                           shift and go to state 72

state 83

    (43) IfSentence -> IF ( Expression . ) M Block N M ElseSentence

    )               shift and go to state 116


state 84

    (41) WhileSentence -> WHILE M ( . Expression ) M Block
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Expression                     shift and go to state 117
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 85

    (38) ReturnSentence -> RETURN Expression ; .

    INT             reduce using rule 38 (ReturnSentence -> RETURN Expression ; .)
    error           reduce using rule 38 (ReturnSentence -> RETURN Expression ; .)
    IF              reduce using rule 38 (ReturnSentence -> RETURN Expression ; .)
    WHILE           reduce using rule 38 (ReturnSentence -> RETURN Expression ; .)
    RETURN          reduce using rule 38 (ReturnSentence -> RETURN Expression ; .)
    ID              reduce using rule 38 (ReturnSentence -> RETURN Expression ; .)
    }               reduce using rule 38 (ReturnSentence -> RETURN Expression ; .)


state 86

    (40) ReturnSentence -> RETURN Expression error .

    INT             reduce using rule 40 (ReturnSentence -> RETURN Expression error .)
    error           reduce using rule 40 (ReturnSentence -> RETURN Expression error .)
    IF              reduce using rule 40 (ReturnSentence -> RETURN Expression error .)
    WHILE           reduce using rule 40 (ReturnSentence -> RETURN Expression error .)
    RETURN          reduce using rule 40 (ReturnSentence -> RETURN Expression error .)
    ID              reduce using rule 40 (ReturnSentence -> RETURN Expression error .)
    }               reduce using rule 40 (ReturnSentence -> RETURN Expression error .)


state 87

    (54) Expression -> error < . AddExpression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 118
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 119
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 88

    (56) Expression -> error LESS . AddExpression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 118
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 120
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 89

    (58) Expression -> error > . AddExpression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 118
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 121
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 90

    (60) Expression -> error GREATER . AddExpression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 118
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 122
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 91

    (62) Expression -> error EQUAL . AddExpression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 118
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 123
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 92

    (64) Expression -> error UNEQUAL . AddExpression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 118
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 124
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 93

    (73) Term -> error * . Factor
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76
    error           shift and go to state 125

    Factor                         shift and go to state 126

state 94

    (75) Term -> error / . Factor
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76
    error           shift and go to state 125

    Factor                         shift and go to state 127

state 95

    (80) Factor -> error Expression . )

    )               shift and go to state 128


state 96

    (48) Expression -> AddExpression < . AddExpression
    (55) Expression -> AddExpression < . error
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 130
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 129
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 97

    (49) Expression -> AddExpression LESS . AddExpression
    (57) Expression -> AddExpression LESS . error
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 132
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 131
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 98

    (50) Expression -> AddExpression > . AddExpression
    (59) Expression -> AddExpression > . error
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 134
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 133
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 99

    (51) Expression -> AddExpression GREATER . AddExpression
    (61) Expression -> AddExpression GREATER . error
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 136
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 135
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 100

    (52) Expression -> AddExpression EQUAL . AddExpression
    (63) Expression -> AddExpression EQUAL . error
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 138
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 137
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 101

    (53) Expression -> AddExpression UNEQUAL . AddExpression
    (65) Expression -> AddExpression UNEQUAL . error
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 140
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    AddExpression                  shift and go to state 139
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 102

    (66) Expression -> - Expression .

    ;               reduce using rule 66 (Expression -> - Expression .)
    error           reduce using rule 66 (Expression -> - Expression .)
    )               reduce using rule 66 (Expression -> - Expression .)
    ,               reduce using rule 66 (Expression -> - Expression .)


state 103

    (68) AddExpression -> Term + . Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 118
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Term                           shift and go to state 141
    Factor                         shift and go to state 73

state 104

    (69) AddExpression -> Term - . Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 118
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Term                           shift and go to state 142
    Factor                         shift and go to state 73

state 105

    (71) Term -> Factor * . Factor
    (74) Term -> Factor * . error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 144
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Factor                         shift and go to state 143

state 106

    (72) Term -> Factor / . Factor
    (76) Term -> Factor / . error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 146
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Factor                         shift and go to state 145

state 107

    (78) Factor -> ( Expression . )
    (81) Factor -> ( Expression . error

    )               shift and go to state 147
    error           shift and go to state 148


state 108

    (79) Factor -> ID FTYPE .

    *               reduce using rule 79 (Factor -> ID FTYPE .)
    /               reduce using rule 79 (Factor -> ID FTYPE .)
    +               reduce using rule 79 (Factor -> ID FTYPE .)
    -               reduce using rule 79 (Factor -> ID FTYPE .)
    <               reduce using rule 79 (Factor -> ID FTYPE .)
    LESS            reduce using rule 79 (Factor -> ID FTYPE .)
    >               reduce using rule 79 (Factor -> ID FTYPE .)
    GREATER         reduce using rule 79 (Factor -> ID FTYPE .)
    EQUAL           reduce using rule 79 (Factor -> ID FTYPE .)
    UNEQUAL         reduce using rule 79 (Factor -> ID FTYPE .)
    ;               reduce using rule 79 (Factor -> ID FTYPE .)
    error           reduce using rule 79 (Factor -> ID FTYPE .)
    )               reduce using rule 79 (Factor -> ID FTYPE .)
    ,               reduce using rule 79 (Factor -> ID FTYPE .)


state 109

    (82) FTYPE -> Call .

    *               reduce using rule 82 (FTYPE -> Call .)
    /               reduce using rule 82 (FTYPE -> Call .)
    +               reduce using rule 82 (FTYPE -> Call .)
    -               reduce using rule 82 (FTYPE -> Call .)
    <               reduce using rule 82 (FTYPE -> Call .)
    LESS            reduce using rule 82 (FTYPE -> Call .)
    >               reduce using rule 82 (FTYPE -> Call .)
    GREATER         reduce using rule 82 (FTYPE -> Call .)
    EQUAL           reduce using rule 82 (FTYPE -> Call .)
    UNEQUAL         reduce using rule 82 (FTYPE -> Call .)
    ;               reduce using rule 82 (FTYPE -> Call .)
    error           reduce using rule 82 (FTYPE -> Call .)
    )               reduce using rule 82 (FTYPE -> Call .)
    ,               reduce using rule 82 (FTYPE -> Call .)


state 110

    (83) FTYPE -> empty .

    *               reduce using rule 83 (FTYPE -> empty .)
    /               reduce using rule 83 (FTYPE -> empty .)
    +               reduce using rule 83 (FTYPE -> empty .)
    -               reduce using rule 83 (FTYPE -> empty .)
    <               reduce using rule 83 (FTYPE -> empty .)
    LESS            reduce using rule 83 (FTYPE -> empty .)
    >               reduce using rule 83 (FTYPE -> empty .)
    GREATER         reduce using rule 83 (FTYPE -> empty .)
    EQUAL           reduce using rule 83 (FTYPE -> empty .)
    UNEQUAL         reduce using rule 83 (FTYPE -> empty .)
    ;               reduce using rule 83 (FTYPE -> empty .)
    error           reduce using rule 83 (FTYPE -> empty .)
    )               reduce using rule 83 (FTYPE -> empty .)
    ,               reduce using rule 83 (FTYPE -> empty .)


state 111

    (84) Call -> ( . RealPara )
    (85) Call -> ( . RealPara error
    (87) RealPara -> . RealParaTable
    (88) RealPara -> . empty
    (89) RealParaTable -> . Para TRealParaTable
    (94) empty -> .
    (93) Para -> . Expression
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
    )               reduce using rule 94 (empty -> .)
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! error           [ reduce using rule 94 (empty -> .) ]

    RealPara                       shift and go to state 149
    RealParaTable                  shift and go to state 150
    empty                          shift and go to state 151
    Para                           shift and go to state 152
    Expression                     shift and go to state 153
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 112

    (86) Call -> error . RealPara )
    (87) RealPara -> . RealParaTable
    (88) RealPara -> . empty
    (89) RealParaTable -> . Para TRealParaTable
    (94) empty -> .
    (93) Para -> . Expression
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    )               reduce using rule 94 (empty -> .)
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    RealPara                       shift and go to state 154
    RealParaTable                  shift and go to state 150
    empty                          shift and go to state 151
    Para                           shift and go to state 152
    Expression                     shift and go to state 153
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 113

    (21) Block -> error LangStr TLangStr } .

    INT             reduce using rule 21 (Block -> error LangStr TLangStr } .)
    VOID            reduce using rule 21 (Block -> error LangStr TLangStr } .)
    $end            reduce using rule 21 (Block -> error LangStr TLangStr } .)
    ELSE            reduce using rule 21 (Block -> error LangStr TLangStr } .)
    error           reduce using rule 21 (Block -> error LangStr TLangStr } .)
    IF              reduce using rule 21 (Block -> error LangStr TLangStr } .)
    WHILE           reduce using rule 21 (Block -> error LangStr TLangStr } .)
    RETURN          reduce using rule 21 (Block -> error LangStr TLangStr } .)
    ID              reduce using rule 21 (Block -> error LangStr TLangStr } .)
    }               reduce using rule 21 (Block -> error LangStr TLangStr } .)


state 114

    (35) AssignSentence -> ID = Expression ; .

    INT             reduce using rule 35 (AssignSentence -> ID = Expression ; .)
    error           reduce using rule 35 (AssignSentence -> ID = Expression ; .)
    IF              reduce using rule 35 (AssignSentence -> ID = Expression ; .)
    WHILE           reduce using rule 35 (AssignSentence -> ID = Expression ; .)
    RETURN          reduce using rule 35 (AssignSentence -> ID = Expression ; .)
    ID              reduce using rule 35 (AssignSentence -> ID = Expression ; .)
    }               reduce using rule 35 (AssignSentence -> ID = Expression ; .)


state 115

    (36) AssignSentence -> ID = Expression error .

    INT             reduce using rule 36 (AssignSentence -> ID = Expression error .)
    error           reduce using rule 36 (AssignSentence -> ID = Expression error .)
    IF              reduce using rule 36 (AssignSentence -> ID = Expression error .)
    WHILE           reduce using rule 36 (AssignSentence -> ID = Expression error .)
    RETURN          reduce using rule 36 (AssignSentence -> ID = Expression error .)
    ID              reduce using rule 36 (AssignSentence -> ID = Expression error .)
    }               reduce using rule 36 (AssignSentence -> ID = Expression error .)


state 116

    (43) IfSentence -> IF ( Expression ) . M Block N M ElseSentence
    (42) M -> . empty
    (94) empty -> .

    {               reduce using rule 94 (empty -> .)
    error           reduce using rule 94 (empty -> .)

    M                              shift and go to state 155
    empty                          shift and go to state 66

state 117

    (41) WhileSentence -> WHILE M ( Expression . ) M Block

    )               shift and go to state 156


state 118

    (73) Term -> error . * Factor
    (75) Term -> error . / Factor
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    *               shift and go to state 93
    /               shift and go to state 94
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72

state 119

    (54) Expression -> error < AddExpression .

    ;               reduce using rule 54 (Expression -> error < AddExpression .)
    error           reduce using rule 54 (Expression -> error < AddExpression .)
    )               reduce using rule 54 (Expression -> error < AddExpression .)
    ,               reduce using rule 54 (Expression -> error < AddExpression .)


state 120

    (56) Expression -> error LESS AddExpression .

    ;               reduce using rule 56 (Expression -> error LESS AddExpression .)
    error           reduce using rule 56 (Expression -> error LESS AddExpression .)
    )               reduce using rule 56 (Expression -> error LESS AddExpression .)
    ,               reduce using rule 56 (Expression -> error LESS AddExpression .)


state 121

    (58) Expression -> error > AddExpression .

    ;               reduce using rule 58 (Expression -> error > AddExpression .)
    error           reduce using rule 58 (Expression -> error > AddExpression .)
    )               reduce using rule 58 (Expression -> error > AddExpression .)
    ,               reduce using rule 58 (Expression -> error > AddExpression .)


state 122

    (60) Expression -> error GREATER AddExpression .

    ;               reduce using rule 60 (Expression -> error GREATER AddExpression .)
    error           reduce using rule 60 (Expression -> error GREATER AddExpression .)
    )               reduce using rule 60 (Expression -> error GREATER AddExpression .)
    ,               reduce using rule 60 (Expression -> error GREATER AddExpression .)


state 123

    (62) Expression -> error EQUAL AddExpression .

    ;               reduce using rule 62 (Expression -> error EQUAL AddExpression .)
    error           reduce using rule 62 (Expression -> error EQUAL AddExpression .)
    )               reduce using rule 62 (Expression -> error EQUAL AddExpression .)
    ,               reduce using rule 62 (Expression -> error EQUAL AddExpression .)


state 124

    (64) Expression -> error UNEQUAL AddExpression .

    ;               reduce using rule 64 (Expression -> error UNEQUAL AddExpression .)
    error           reduce using rule 64 (Expression -> error UNEQUAL AddExpression .)
    )               reduce using rule 64 (Expression -> error UNEQUAL AddExpression .)
    ,               reduce using rule 64 (Expression -> error UNEQUAL AddExpression .)


state 125

    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Expression                     shift and go to state 95
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 126

    (73) Term -> error * Factor .

    +               reduce using rule 73 (Term -> error * Factor .)
    -               reduce using rule 73 (Term -> error * Factor .)
    <               reduce using rule 73 (Term -> error * Factor .)
    LESS            reduce using rule 73 (Term -> error * Factor .)
    >               reduce using rule 73 (Term -> error * Factor .)
    GREATER         reduce using rule 73 (Term -> error * Factor .)
    EQUAL           reduce using rule 73 (Term -> error * Factor .)
    UNEQUAL         reduce using rule 73 (Term -> error * Factor .)
    ;               reduce using rule 73 (Term -> error * Factor .)
    error           reduce using rule 73 (Term -> error * Factor .)
    )               reduce using rule 73 (Term -> error * Factor .)
    ,               reduce using rule 73 (Term -> error * Factor .)


state 127

    (75) Term -> error / Factor .

    +               reduce using rule 75 (Term -> error / Factor .)
    -               reduce using rule 75 (Term -> error / Factor .)
    <               reduce using rule 75 (Term -> error / Factor .)
    LESS            reduce using rule 75 (Term -> error / Factor .)
    >               reduce using rule 75 (Term -> error / Factor .)
    GREATER         reduce using rule 75 (Term -> error / Factor .)
    EQUAL           reduce using rule 75 (Term -> error / Factor .)
    UNEQUAL         reduce using rule 75 (Term -> error / Factor .)
    ;               reduce using rule 75 (Term -> error / Factor .)
    error           reduce using rule 75 (Term -> error / Factor .)
    )               reduce using rule 75 (Term -> error / Factor .)
    ,               reduce using rule 75 (Term -> error / Factor .)


state 128

    (80) Factor -> error Expression ) .

    *               reduce using rule 80 (Factor -> error Expression ) .)
    /               reduce using rule 80 (Factor -> error Expression ) .)
    +               reduce using rule 80 (Factor -> error Expression ) .)
    -               reduce using rule 80 (Factor -> error Expression ) .)
    <               reduce using rule 80 (Factor -> error Expression ) .)
    LESS            reduce using rule 80 (Factor -> error Expression ) .)
    >               reduce using rule 80 (Factor -> error Expression ) .)
    GREATER         reduce using rule 80 (Factor -> error Expression ) .)
    EQUAL           reduce using rule 80 (Factor -> error Expression ) .)
    UNEQUAL         reduce using rule 80 (Factor -> error Expression ) .)
    ;               reduce using rule 80 (Factor -> error Expression ) .)
    error           reduce using rule 80 (Factor -> error Expression ) .)
    )               reduce using rule 80 (Factor -> error Expression ) .)
    ,               reduce using rule 80 (Factor -> error Expression ) .)


state 129

    (48) Expression -> AddExpression < AddExpression .

    ;               reduce using rule 48 (Expression -> AddExpression < AddExpression .)
    error           reduce using rule 48 (Expression -> AddExpression < AddExpression .)
    )               reduce using rule 48 (Expression -> AddExpression < AddExpression .)
    ,               reduce using rule 48 (Expression -> AddExpression < AddExpression .)


state 130

    (55) Expression -> AddExpression < error .
    (73) Term -> error . * Factor
    (75) Term -> error . / Factor
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
    ;               reduce using rule 55 (Expression -> AddExpression < error .)
    )               reduce using rule 55 (Expression -> AddExpression < error .)
    ,               reduce using rule 55 (Expression -> AddExpression < error .)
    *               shift and go to state 93
    /               shift and go to state 94
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! error           [ reduce using rule 55 (Expression -> AddExpression < error .) ]

    AddExpression                  shift and go to state 70
    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    Term                           shift and go to state 72

state 131

    (49) Expression -> AddExpression LESS AddExpression .

    ;               reduce using rule 49 (Expression -> AddExpression LESS AddExpression .)
    error           reduce using rule 49 (Expression -> AddExpression LESS AddExpression .)
    )               reduce using rule 49 (Expression -> AddExpression LESS AddExpression .)
    ,               reduce using rule 49 (Expression -> AddExpression LESS AddExpression .)


state 132

    (57) Expression -> AddExpression LESS error .
    (73) Term -> error . * Factor
    (75) Term -> error . / Factor
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
    ;               reduce using rule 57 (Expression -> AddExpression LESS error .)
    )               reduce using rule 57 (Expression -> AddExpression LESS error .)
    ,               reduce using rule 57 (Expression -> AddExpression LESS error .)
    *               shift and go to state 93
    /               shift and go to state 94
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! error           [ reduce using rule 57 (Expression -> AddExpression LESS error .) ]

    AddExpression                  shift and go to state 70
    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    Term                           shift and go to state 72

state 133

    (50) Expression -> AddExpression > AddExpression .

    ;               reduce using rule 50 (Expression -> AddExpression > AddExpression .)
    error           reduce using rule 50 (Expression -> AddExpression > AddExpression .)
    )               reduce using rule 50 (Expression -> AddExpression > AddExpression .)
    ,               reduce using rule 50 (Expression -> AddExpression > AddExpression .)


state 134

    (59) Expression -> AddExpression > error .
    (73) Term -> error . * Factor
    (75) Term -> error . / Factor
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
    ;               reduce using rule 59 (Expression -> AddExpression > error .)
    )               reduce using rule 59 (Expression -> AddExpression > error .)
    ,               reduce using rule 59 (Expression -> AddExpression > error .)
    *               shift and go to state 93
    /               shift and go to state 94
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! error           [ reduce using rule 59 (Expression -> AddExpression > error .) ]

    AddExpression                  shift and go to state 70
    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    Term                           shift and go to state 72

state 135

    (51) Expression -> AddExpression GREATER AddExpression .

    ;               reduce using rule 51 (Expression -> AddExpression GREATER AddExpression .)
    error           reduce using rule 51 (Expression -> AddExpression GREATER AddExpression .)
    )               reduce using rule 51 (Expression -> AddExpression GREATER AddExpression .)
    ,               reduce using rule 51 (Expression -> AddExpression GREATER AddExpression .)


state 136

    (61) Expression -> AddExpression GREATER error .
    (73) Term -> error . * Factor
    (75) Term -> error . / Factor
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
    ;               reduce using rule 61 (Expression -> AddExpression GREATER error .)
    )               reduce using rule 61 (Expression -> AddExpression GREATER error .)
    ,               reduce using rule 61 (Expression -> AddExpression GREATER error .)
    *               shift and go to state 93
    /               shift and go to state 94
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! error           [ reduce using rule 61 (Expression -> AddExpression GREATER error .) ]

    AddExpression                  shift and go to state 70
    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    Term                           shift and go to state 72

state 137

    (52) Expression -> AddExpression EQUAL AddExpression .

    ;               reduce using rule 52 (Expression -> AddExpression EQUAL AddExpression .)
    error           reduce using rule 52 (Expression -> AddExpression EQUAL AddExpression .)
    )               reduce using rule 52 (Expression -> AddExpression EQUAL AddExpression .)
    ,               reduce using rule 52 (Expression -> AddExpression EQUAL AddExpression .)


state 138

    (63) Expression -> AddExpression EQUAL error .
    (73) Term -> error . * Factor
    (75) Term -> error . / Factor
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
    ;               reduce using rule 63 (Expression -> AddExpression EQUAL error .)
    )               reduce using rule 63 (Expression -> AddExpression EQUAL error .)
    ,               reduce using rule 63 (Expression -> AddExpression EQUAL error .)
    *               shift and go to state 93
    /               shift and go to state 94
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! error           [ reduce using rule 63 (Expression -> AddExpression EQUAL error .) ]

    AddExpression                  shift and go to state 70
    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    Term                           shift and go to state 72

state 139

    (53) Expression -> AddExpression UNEQUAL AddExpression .

    ;               reduce using rule 53 (Expression -> AddExpression UNEQUAL AddExpression .)
    error           reduce using rule 53 (Expression -> AddExpression UNEQUAL AddExpression .)
    )               reduce using rule 53 (Expression -> AddExpression UNEQUAL AddExpression .)
    ,               reduce using rule 53 (Expression -> AddExpression UNEQUAL AddExpression .)


state 140

    (65) Expression -> AddExpression UNEQUAL error .
    (73) Term -> error . * Factor
    (75) Term -> error . / Factor
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
    ;               reduce using rule 65 (Expression -> AddExpression UNEQUAL error .)
    )               reduce using rule 65 (Expression -> AddExpression UNEQUAL error .)
    ,               reduce using rule 65 (Expression -> AddExpression UNEQUAL error .)
    *               shift and go to state 93
    /               shift and go to state 94
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! error           [ reduce using rule 65 (Expression -> AddExpression UNEQUAL error .) ]

    AddExpression                  shift and go to state 70
    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    Term                           shift and go to state 72

state 141

    (68) AddExpression -> Term + Term .

    <               reduce using rule 68 (AddExpression -> Term + Term .)
    LESS            reduce using rule 68 (AddExpression -> Term + Term .)
    >               reduce using rule 68 (AddExpression -> Term + Term .)
    GREATER         reduce using rule 68 (AddExpression -> Term + Term .)
    EQUAL           reduce using rule 68 (AddExpression -> Term + Term .)
    UNEQUAL         reduce using rule 68 (AddExpression -> Term + Term .)
    ;               reduce using rule 68 (AddExpression -> Term + Term .)
    error           reduce using rule 68 (AddExpression -> Term + Term .)
    )               reduce using rule 68 (AddExpression -> Term + Term .)
    ,               reduce using rule 68 (AddExpression -> Term + Term .)


state 142

    (69) AddExpression -> Term - Term .

    <               reduce using rule 69 (AddExpression -> Term - Term .)
    LESS            reduce using rule 69 (AddExpression -> Term - Term .)
    >               reduce using rule 69 (AddExpression -> Term - Term .)
    GREATER         reduce using rule 69 (AddExpression -> Term - Term .)
    EQUAL           reduce using rule 69 (AddExpression -> Term - Term .)
    UNEQUAL         reduce using rule 69 (AddExpression -> Term - Term .)
    ;               reduce using rule 69 (AddExpression -> Term - Term .)
    error           reduce using rule 69 (AddExpression -> Term - Term .)
    )               reduce using rule 69 (AddExpression -> Term - Term .)
    ,               reduce using rule 69 (AddExpression -> Term - Term .)


state 143

    (71) Term -> Factor * Factor .

    +               reduce using rule 71 (Term -> Factor * Factor .)
    -               reduce using rule 71 (Term -> Factor * Factor .)
    <               reduce using rule 71 (Term -> Factor * Factor .)
    LESS            reduce using rule 71 (Term -> Factor * Factor .)
    >               reduce using rule 71 (Term -> Factor * Factor .)
    GREATER         reduce using rule 71 (Term -> Factor * Factor .)
    EQUAL           reduce using rule 71 (Term -> Factor * Factor .)
    UNEQUAL         reduce using rule 71 (Term -> Factor * Factor .)
    ;               reduce using rule 71 (Term -> Factor * Factor .)
    error           reduce using rule 71 (Term -> Factor * Factor .)
    )               reduce using rule 71 (Term -> Factor * Factor .)
    ,               reduce using rule 71 (Term -> Factor * Factor .)


state 144

    (74) Term -> Factor * error .
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for - resolved as shift
    +               reduce using rule 74 (Term -> Factor * error .)
    <               reduce using rule 74 (Term -> Factor * error .)
    LESS            reduce using rule 74 (Term -> Factor * error .)
    >               reduce using rule 74 (Term -> Factor * error .)
    GREATER         reduce using rule 74 (Term -> Factor * error .)
    EQUAL           reduce using rule 74 (Term -> Factor * error .)
    UNEQUAL         reduce using rule 74 (Term -> Factor * error .)
    ;               reduce using rule 74 (Term -> Factor * error .)
    )               reduce using rule 74 (Term -> Factor * error .)
    ,               reduce using rule 74 (Term -> Factor * error .)
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! -               [ reduce using rule 74 (Term -> Factor * error .) ]
  ! error           [ reduce using rule 74 (Term -> Factor * error .) ]

    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72

state 145

    (72) Term -> Factor / Factor .

    +               reduce using rule 72 (Term -> Factor / Factor .)
    -               reduce using rule 72 (Term -> Factor / Factor .)
    <               reduce using rule 72 (Term -> Factor / Factor .)
    LESS            reduce using rule 72 (Term -> Factor / Factor .)
    >               reduce using rule 72 (Term -> Factor / Factor .)
    GREATER         reduce using rule 72 (Term -> Factor / Factor .)
    EQUAL           reduce using rule 72 (Term -> Factor / Factor .)
    UNEQUAL         reduce using rule 72 (Term -> Factor / Factor .)
    ;               reduce using rule 72 (Term -> Factor / Factor .)
    error           reduce using rule 72 (Term -> Factor / Factor .)
    )               reduce using rule 72 (Term -> Factor / Factor .)
    ,               reduce using rule 72 (Term -> Factor / Factor .)


state 146

    (76) Term -> Factor / error .
    (80) Factor -> error . Expression )
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

  ! shift/reduce conflict for error resolved as shift
  ! shift/reduce conflict for - resolved as shift
    +               reduce using rule 76 (Term -> Factor / error .)
    <               reduce using rule 76 (Term -> Factor / error .)
    LESS            reduce using rule 76 (Term -> Factor / error .)
    >               reduce using rule 76 (Term -> Factor / error .)
    GREATER         reduce using rule 76 (Term -> Factor / error .)
    EQUAL           reduce using rule 76 (Term -> Factor / error .)
    UNEQUAL         reduce using rule 76 (Term -> Factor / error .)
    ;               reduce using rule 76 (Term -> Factor / error .)
    )               reduce using rule 76 (Term -> Factor / error .)
    ,               reduce using rule 76 (Term -> Factor / error .)
    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

  ! -               [ reduce using rule 76 (Term -> Factor / error .) ]
  ! error           [ reduce using rule 76 (Term -> Factor / error .) ]

    Factor                         shift and go to state 73
    Expression                     shift and go to state 95
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72

state 147

    (78) Factor -> ( Expression ) .

    *               reduce using rule 78 (Factor -> ( Expression ) .)
    /               reduce using rule 78 (Factor -> ( Expression ) .)
    +               reduce using rule 78 (Factor -> ( Expression ) .)
    -               reduce using rule 78 (Factor -> ( Expression ) .)
    <               reduce using rule 78 (Factor -> ( Expression ) .)
    LESS            reduce using rule 78 (Factor -> ( Expression ) .)
    >               reduce using rule 78 (Factor -> ( Expression ) .)
    GREATER         reduce using rule 78 (Factor -> ( Expression ) .)
    EQUAL           reduce using rule 78 (Factor -> ( Expression ) .)
    UNEQUAL         reduce using rule 78 (Factor -> ( Expression ) .)
    ;               reduce using rule 78 (Factor -> ( Expression ) .)
    error           reduce using rule 78 (Factor -> ( Expression ) .)
    )               reduce using rule 78 (Factor -> ( Expression ) .)
    ,               reduce using rule 78 (Factor -> ( Expression ) .)


state 148

    (81) Factor -> ( Expression error .

    *               reduce using rule 81 (Factor -> ( Expression error .)
    /               reduce using rule 81 (Factor -> ( Expression error .)
    +               reduce using rule 81 (Factor -> ( Expression error .)
    -               reduce using rule 81 (Factor -> ( Expression error .)
    <               reduce using rule 81 (Factor -> ( Expression error .)
    LESS            reduce using rule 81 (Factor -> ( Expression error .)
    >               reduce using rule 81 (Factor -> ( Expression error .)
    GREATER         reduce using rule 81 (Factor -> ( Expression error .)
    EQUAL           reduce using rule 81 (Factor -> ( Expression error .)
    UNEQUAL         reduce using rule 81 (Factor -> ( Expression error .)
    ;               reduce using rule 81 (Factor -> ( Expression error .)
    error           reduce using rule 81 (Factor -> ( Expression error .)
    )               reduce using rule 81 (Factor -> ( Expression error .)
    ,               reduce using rule 81 (Factor -> ( Expression error .)


state 149

    (84) Call -> ( RealPara . )
    (85) Call -> ( RealPara . error

    )               shift and go to state 157
    error           shift and go to state 158


state 150

    (87) RealPara -> RealParaTable .

    )               reduce using rule 87 (RealPara -> RealParaTable .)
    error           reduce using rule 87 (RealPara -> RealParaTable .)


state 151

    (88) RealPara -> empty .

    )               reduce using rule 88 (RealPara -> empty .)
    error           reduce using rule 88 (RealPara -> empty .)


state 152

    (89) RealParaTable -> Para . TRealParaTable
    (90) TRealParaTable -> . , Para TRealParaTable
    (91) TRealParaTable -> . empty
    (92) TRealParaTable -> . error Para TRealParaTable
    (94) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 160
    error           shift and go to state 162
    )               reduce using rule 94 (empty -> .)

  ! error           [ reduce using rule 94 (empty -> .) ]

    TRealParaTable                 shift and go to state 159
    empty                          shift and go to state 161

state 153

    (93) Para -> Expression .

    ,               reduce using rule 93 (Para -> Expression .)
    error           reduce using rule 93 (Para -> Expression .)
    )               reduce using rule 93 (Para -> Expression .)


state 154

    (86) Call -> error RealPara . )

    )               shift and go to state 163


state 155

    (43) IfSentence -> IF ( Expression ) M . Block N M ElseSentence
    (20) Block -> . { LangStr TLangStr }
    (21) Block -> . error LangStr TLangStr }
    (22) Block -> . { LangStr TLangStr error

    {               shift and go to state 35
    error           shift and go to state 36

    Block                          shift and go to state 164

state 156

    (41) WhileSentence -> WHILE M ( Expression ) . M Block
    (42) M -> . empty
    (94) empty -> .

    {               reduce using rule 94 (empty -> .)
    error           reduce using rule 94 (empty -> .)

    M                              shift and go to state 165
    empty                          shift and go to state 66

state 157

    (84) Call -> ( RealPara ) .

    *               reduce using rule 84 (Call -> ( RealPara ) .)
    /               reduce using rule 84 (Call -> ( RealPara ) .)
    +               reduce using rule 84 (Call -> ( RealPara ) .)
    -               reduce using rule 84 (Call -> ( RealPara ) .)
    <               reduce using rule 84 (Call -> ( RealPara ) .)
    LESS            reduce using rule 84 (Call -> ( RealPara ) .)
    >               reduce using rule 84 (Call -> ( RealPara ) .)
    GREATER         reduce using rule 84 (Call -> ( RealPara ) .)
    EQUAL           reduce using rule 84 (Call -> ( RealPara ) .)
    UNEQUAL         reduce using rule 84 (Call -> ( RealPara ) .)
    ;               reduce using rule 84 (Call -> ( RealPara ) .)
    error           reduce using rule 84 (Call -> ( RealPara ) .)
    )               reduce using rule 84 (Call -> ( RealPara ) .)
    ,               reduce using rule 84 (Call -> ( RealPara ) .)


state 158

    (85) Call -> ( RealPara error .

    *               reduce using rule 85 (Call -> ( RealPara error .)
    /               reduce using rule 85 (Call -> ( RealPara error .)
    +               reduce using rule 85 (Call -> ( RealPara error .)
    -               reduce using rule 85 (Call -> ( RealPara error .)
    <               reduce using rule 85 (Call -> ( RealPara error .)
    LESS            reduce using rule 85 (Call -> ( RealPara error .)
    >               reduce using rule 85 (Call -> ( RealPara error .)
    GREATER         reduce using rule 85 (Call -> ( RealPara error .)
    EQUAL           reduce using rule 85 (Call -> ( RealPara error .)
    UNEQUAL         reduce using rule 85 (Call -> ( RealPara error .)
    ;               reduce using rule 85 (Call -> ( RealPara error .)
    error           reduce using rule 85 (Call -> ( RealPara error .)
    )               reduce using rule 85 (Call -> ( RealPara error .)
    ,               reduce using rule 85 (Call -> ( RealPara error .)


state 159

    (89) RealParaTable -> Para TRealParaTable .

    )               reduce using rule 89 (RealParaTable -> Para TRealParaTable .)
    error           reduce using rule 89 (RealParaTable -> Para TRealParaTable .)


state 160

    (90) TRealParaTable -> , . Para TRealParaTable
    (93) Para -> . Expression
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Para                           shift and go to state 166
    Expression                     shift and go to state 153
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 161

    (91) TRealParaTable -> empty .

    )               reduce using rule 91 (TRealParaTable -> empty .)
    error           reduce using rule 91 (TRealParaTable -> empty .)


state 162

    (92) TRealParaTable -> error . Para TRealParaTable
    (93) Para -> . Expression
    (47) Expression -> . AddExpression
    (48) Expression -> . AddExpression < AddExpression
    (49) Expression -> . AddExpression LESS AddExpression
    (50) Expression -> . AddExpression > AddExpression
    (51) Expression -> . AddExpression GREATER AddExpression
    (52) Expression -> . AddExpression EQUAL AddExpression
    (53) Expression -> . AddExpression UNEQUAL AddExpression
    (54) Expression -> . error < AddExpression
    (55) Expression -> . AddExpression < error
    (56) Expression -> . error LESS AddExpression
    (57) Expression -> . AddExpression LESS error
    (58) Expression -> . error > AddExpression
    (59) Expression -> . AddExpression > error
    (60) Expression -> . error GREATER AddExpression
    (61) Expression -> . AddExpression GREATER error
    (62) Expression -> . error EQUAL AddExpression
    (63) Expression -> . AddExpression EQUAL error
    (64) Expression -> . error UNEQUAL AddExpression
    (65) Expression -> . AddExpression UNEQUAL error
    (66) Expression -> . - Expression
    (67) AddExpression -> . Term
    (68) AddExpression -> . Term + Term
    (69) AddExpression -> . Term - Term
    (70) Term -> . Factor
    (71) Term -> . Factor * Factor
    (72) Term -> . Factor / Factor
    (73) Term -> . error * Factor
    (74) Term -> . Factor * error
    (75) Term -> . error / Factor
    (76) Term -> . Factor / error
    (77) Factor -> . NUMBER
    (78) Factor -> . ( Expression )
    (79) Factor -> . ID FTYPE
    (80) Factor -> . error Expression )
    (81) Factor -> . ( Expression error

    error           shift and go to state 82
    -               shift and go to state 71
    NUMBER          shift and go to state 74
    (               shift and go to state 75
    ID              shift and go to state 76

    Para                           shift and go to state 167
    Expression                     shift and go to state 153
    AddExpression                  shift and go to state 70
    Term                           shift and go to state 72
    Factor                         shift and go to state 73

state 163

    (86) Call -> error RealPara ) .

    *               reduce using rule 86 (Call -> error RealPara ) .)
    /               reduce using rule 86 (Call -> error RealPara ) .)
    +               reduce using rule 86 (Call -> error RealPara ) .)
    -               reduce using rule 86 (Call -> error RealPara ) .)
    <               reduce using rule 86 (Call -> error RealPara ) .)
    LESS            reduce using rule 86 (Call -> error RealPara ) .)
    >               reduce using rule 86 (Call -> error RealPara ) .)
    GREATER         reduce using rule 86 (Call -> error RealPara ) .)
    EQUAL           reduce using rule 86 (Call -> error RealPara ) .)
    UNEQUAL         reduce using rule 86 (Call -> error RealPara ) .)
    ;               reduce using rule 86 (Call -> error RealPara ) .)
    error           reduce using rule 86 (Call -> error RealPara ) .)
    )               reduce using rule 86 (Call -> error RealPara ) .)
    ,               reduce using rule 86 (Call -> error RealPara ) .)


state 164

    (43) IfSentence -> IF ( Expression ) M Block . N M ElseSentence
    (44) N -> . empty
    (94) empty -> .

    ELSE            reduce using rule 94 (empty -> .)
    INT             reduce using rule 94 (empty -> .)
    error           reduce using rule 94 (empty -> .)
    IF              reduce using rule 94 (empty -> .)
    WHILE           reduce using rule 94 (empty -> .)
    RETURN          reduce using rule 94 (empty -> .)
    ID              reduce using rule 94 (empty -> .)
    }               reduce using rule 94 (empty -> .)

    N                              shift and go to state 168
    empty                          shift and go to state 169

state 165

    (41) WhileSentence -> WHILE M ( Expression ) M . Block
    (20) Block -> . { LangStr TLangStr }
    (21) Block -> . error LangStr TLangStr }
    (22) Block -> . { LangStr TLangStr error

    {               shift and go to state 35
    error           shift and go to state 36

    Block                          shift and go to state 170

state 166

    (90) TRealParaTable -> , Para . TRealParaTable
    (90) TRealParaTable -> . , Para TRealParaTable
    (91) TRealParaTable -> . empty
    (92) TRealParaTable -> . error Para TRealParaTable
    (94) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 160
    error           shift and go to state 162
    )               reduce using rule 94 (empty -> .)

  ! error           [ reduce using rule 94 (empty -> .) ]

    TRealParaTable                 shift and go to state 171
    empty                          shift and go to state 161

state 167

    (92) TRealParaTable -> error Para . TRealParaTable
    (90) TRealParaTable -> . , Para TRealParaTable
    (91) TRealParaTable -> . empty
    (92) TRealParaTable -> . error Para TRealParaTable
    (94) empty -> .

  ! shift/reduce conflict for error resolved as shift
    ,               shift and go to state 160
    error           shift and go to state 162
    )               reduce using rule 94 (empty -> .)

  ! error           [ reduce using rule 94 (empty -> .) ]

    TRealParaTable                 shift and go to state 172
    empty                          shift and go to state 161

state 168

    (43) IfSentence -> IF ( Expression ) M Block N . M ElseSentence
    (42) M -> . empty
    (94) empty -> .

    ELSE            reduce using rule 94 (empty -> .)
    INT             reduce using rule 94 (empty -> .)
    error           reduce using rule 94 (empty -> .)
    IF              reduce using rule 94 (empty -> .)
    WHILE           reduce using rule 94 (empty -> .)
    RETURN          reduce using rule 94 (empty -> .)
    ID              reduce using rule 94 (empty -> .)
    }               reduce using rule 94 (empty -> .)

    M                              shift and go to state 173
    empty                          shift and go to state 66

state 169

    (44) N -> empty .

    ELSE            reduce using rule 44 (N -> empty .)
    INT             reduce using rule 44 (N -> empty .)
    error           reduce using rule 44 (N -> empty .)
    IF              reduce using rule 44 (N -> empty .)
    WHILE           reduce using rule 44 (N -> empty .)
    RETURN          reduce using rule 44 (N -> empty .)
    ID              reduce using rule 44 (N -> empty .)
    }               reduce using rule 44 (N -> empty .)


state 170

    (41) WhileSentence -> WHILE M ( Expression ) M Block .

    INT             reduce using rule 41 (WhileSentence -> WHILE M ( Expression ) M Block .)
    error           reduce using rule 41 (WhileSentence -> WHILE M ( Expression ) M Block .)
    IF              reduce using rule 41 (WhileSentence -> WHILE M ( Expression ) M Block .)
    WHILE           reduce using rule 41 (WhileSentence -> WHILE M ( Expression ) M Block .)
    RETURN          reduce using rule 41 (WhileSentence -> WHILE M ( Expression ) M Block .)
    ID              reduce using rule 41 (WhileSentence -> WHILE M ( Expression ) M Block .)
    }               reduce using rule 41 (WhileSentence -> WHILE M ( Expression ) M Block .)


state 171

    (90) TRealParaTable -> , Para TRealParaTable .

    )               reduce using rule 90 (TRealParaTable -> , Para TRealParaTable .)
    error           reduce using rule 90 (TRealParaTable -> , Para TRealParaTable .)


state 172

    (92) TRealParaTable -> error Para TRealParaTable .

    )               reduce using rule 92 (TRealParaTable -> error Para TRealParaTable .)
    error           reduce using rule 92 (TRealParaTable -> error Para TRealParaTable .)


state 173

    (43) IfSentence -> IF ( Expression ) M Block N M . ElseSentence
    (45) ElseSentence -> . empty
    (46) ElseSentence -> . ELSE Block
    (94) empty -> .

    ELSE            shift and go to state 176
    INT             reduce using rule 94 (empty -> .)
    error           reduce using rule 94 (empty -> .)
    IF              reduce using rule 94 (empty -> .)
    WHILE           reduce using rule 94 (empty -> .)
    RETURN          reduce using rule 94 (empty -> .)
    ID              reduce using rule 94 (empty -> .)
    }               reduce using rule 94 (empty -> .)

    ElseSentence                   shift and go to state 174
    empty                          shift and go to state 175

state 174

    (43) IfSentence -> IF ( Expression ) M Block N M ElseSentence .

    INT             reduce using rule 43 (IfSentence -> IF ( Expression ) M Block N M ElseSentence .)
    error           reduce using rule 43 (IfSentence -> IF ( Expression ) M Block N M ElseSentence .)
    IF              reduce using rule 43 (IfSentence -> IF ( Expression ) M Block N M ElseSentence .)
    WHILE           reduce using rule 43 (IfSentence -> IF ( Expression ) M Block N M ElseSentence .)
    RETURN          reduce using rule 43 (IfSentence -> IF ( Expression ) M Block N M ElseSentence .)
    ID              reduce using rule 43 (IfSentence -> IF ( Expression ) M Block N M ElseSentence .)
    }               reduce using rule 43 (IfSentence -> IF ( Expression ) M Block N M ElseSentence .)


state 175

    (45) ElseSentence -> empty .

    INT             reduce using rule 45 (ElseSentence -> empty .)
    error           reduce using rule 45 (ElseSentence -> empty .)
    IF              reduce using rule 45 (ElseSentence -> empty .)
    WHILE           reduce using rule 45 (ElseSentence -> empty .)
    RETURN          reduce using rule 45 (ElseSentence -> empty .)
    ID              reduce using rule 45 (ElseSentence -> empty .)
    }               reduce using rule 45 (ElseSentence -> empty .)


state 176

    (46) ElseSentence -> ELSE . Block
    (20) Block -> . { LangStr TLangStr }
    (21) Block -> . error LangStr TLangStr }
    (22) Block -> . { LangStr TLangStr error

    {               shift and go to state 35
    error           shift and go to state 36

    Block                          shift and go to state 177

state 177

    (46) ElseSentence -> ELSE Block .

    INT             reduce using rule 46 (ElseSentence -> ELSE Block .)
    error           reduce using rule 46 (ElseSentence -> ELSE Block .)
    IF              reduce using rule 46 (ElseSentence -> ELSE Block .)
    WHILE           reduce using rule 46 (ElseSentence -> ELSE Block .)
    RETURN          reduce using rule 46 (ElseSentence -> ELSE Block .)
    ID              reduce using rule 46 (ElseSentence -> ELSE Block .)
    }               reduce using rule 46 (ElseSentence -> ELSE Block .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for VOID in state 15 resolved as shift
WARNING: shift/reduce conflict for INT in state 15 resolved as shift
WARNING: shift/reduce conflict for error in state 40 resolved as shift
WARNING: shift/reduce conflict for error in state 57 resolved as shift
WARNING: shift/reduce conflict for error in state 69 resolved as shift
WARNING: shift/reduce conflict for ID in state 69 resolved as shift
WARNING: shift/reduce conflict for error in state 76 resolved as shift
WARNING: shift/reduce conflict for error in state 111 resolved as shift
WARNING: shift/reduce conflict for error in state 130 resolved as shift
WARNING: shift/reduce conflict for error in state 132 resolved as shift
WARNING: shift/reduce conflict for error in state 134 resolved as shift
WARNING: shift/reduce conflict for error in state 136 resolved as shift
WARNING: shift/reduce conflict for error in state 138 resolved as shift
WARNING: shift/reduce conflict for error in state 140 resolved as shift
WARNING: shift/reduce conflict for error in state 144 resolved as shift
WARNING: shift/reduce conflict for - in state 144 resolved as shift
WARNING: shift/reduce conflict for error in state 146 resolved as shift
WARNING: shift/reduce conflict for - in state 146 resolved as shift
WARNING: shift/reduce conflict for error in state 152 resolved as shift
WARNING: shift/reduce conflict for error in state 166 resolved as shift
WARNING: shift/reduce conflict for error in state 167 resolved as shift
